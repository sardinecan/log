import{s as Q,n as O}from"./scheduler.DaEglZbh.js";import{S as C,i as D,e as p,s as c,c as d,k as S,f as L,g as i,d as l}from"./index.B_-7WD2a.js";function X(N){let n,B="SQL SGBD",m,a,T="<thead><tr><th><strong>SGBD</strong></th> <th><strong>Type</strong></th> <th><strong>Licence</strong></th> <th><strong>Langage</strong></th> <th><strong>Support JSON/XML</strong></th> <th><strong>Backup</strong></th></tr></thead> <tbody><tr><td><strong>MySQL</strong></td> <td>Relationnel</td> <td>Open Source</td> <td>SQL</td> <td>JSON (partiel), XML (via XPath)</td> <td>Oui (mysqldump, etc.)</td></tr> <tr><td><strong>PostgreSQL</strong></td> <td>Relationnel, NoSQL</td> <td>Open Source</td> <td>SQL</td> <td>JSON (complet), XML (natif)</td> <td>Oui (pg_dump, etc.)</td></tr> <tr><td><strong>Oracle DB</strong></td> <td>Relationnel</td> <td>Commercial</td> <td>SQL</td> <td>JSON (partiel), XML (natif)</td> <td>Oui (RMAN, etc.)</td></tr> <tr><td><strong>Microsoft SQL Server</strong></td> <td>Relationnel</td> <td>Commercial</td> <td>SQL</td> <td>JSON (complet), XML (natif)</td> <td>Oui (automatique)</td></tr> <tr><td><strong>MongoDB</strong></td> <td>NoSQL</td> <td>Open Source</td> <td>MQL</td> <td>JSON (natif), XML (non)</td> <td>Oui (mongodump, etc.)</td></tr> <tr><td><strong>MariaDB</strong></td> <td>Relationnel</td> <td>Open Source</td> <td>SQL</td> <td>JSON (partiel), XML (via XPath)</td> <td>Oui (mysqldump, etc.)</td></tr></tbody>",g,o,f="<strong>Légende</strong>",M,r,b="<li>ACID : Atomicité, Cohérence, Isolation, Durabilité</li> <li>TDE : Transparent Data Encryption</li> <li>SSL/TLS : Secure Sockets Layer/Transport Layer Security</li> <li>WAL : Write-Ahead Logging</li>",v,s,h="<strong>Détails sur les SGBD</strong> :",x,u,y=`<li>MySQL :
<ul><li>Type : Base de données relationnelle.</li> <li>Langage de requête : SQL.</li> <li>Support JSON : Support partiel via les types JSON.</li> <li>Support XML : Support via XPath pour l’extraction des données XML.</li> <li>Indexation : B-tree, Full-text, etc.</li> <li>Transactions : Supporte les transactions ACID.</li> <li>Scalabilité : Scalabilité verticale principalement.</li> <li>Extensions : Support limité aux extensions.</li> <li>Sécurité : SSL/TLS, authentification.</li> <li>Backup/Restauration : Oui (mysqldump, XtraBackup, etc.).</li> <li>Communauté : Large.</li></ul></li> <li>PostgreSQL :
<ul><li>Type : Base de données relationnelle et NoSQL.</li> <li>Langage de requête : SQL.</li> <li>Support JSON : Support complet des types JSON et JSONB pour les documents.</li> <li>Support XML : Support natif avec des fonctions pour manipuler les données XML.</li> <li>Indexation : B-tree, Hash, GIN, GiST, etc.</li> <li>Transactions : Supporte les transactions ACID.</li> <li>Scalabilité : Scalabilité horizontale et verticale.</li> <li>Extensions : Très extensible via des plugins comme PostGIS.</li> <li>Sécurité : SSL/TLS, authentification, etc.</li> <li>Backup/Restauration : Oui (pg_dump, WAL, etc.).</li> <li>Communauté : Large.</li></ul></li> <li>Oracle DB :
<ul><li>Type : Base de données relationnelle.</li> <li>Langage de requête : SQL.</li> <li>Support JSON : Support partiel via les types JSON.</li> <li>Support XML : Support natif avec des fonctionnalités avancées pour la manipulation des données XML.</li> <li>Indexation : B-tree, Bitmap, etc.</li> <li>Transactions : Supporte les transactions ACID.</li> <li>Scalabilité : Scalabilité verticale.</li> <li>Extensions : Extensible via options payantes.</li> <li>Sécurité : Sécurité avancée, TDE, etc.</li> <li>Backup/Restauration : Oui (RMAN, datapump, etc.).</li> <li>Communauté : Restreinte (commercial).</li></ul></li> <li>Microsoft SQL Server :
<ul><li>Type : Base de données relationnelle.</li> <li>Langage de requête : SQL.</li> <li>Support JSON : Support complet pour les documents JSON.</li> <li>Support XML : Support natif avec des fonctionnalités intégrées pour manipuler XML.</li> <li>Indexation : B-tree, Full-text, etc.</li> <li>Transactions : Supporte les transactions ACID.</li> <li>Scalabilité : Scalabilité verticale.</li> <li>Extensions : Extensible via plugins.</li> <li>Sécurité : Sécurité avancée, TDE, etc.</li> <li>Backup/Restauration : Oui (backup automatique, etc.).</li> <li>Communauté : Restreinte (commercial).</li></ul></li> <li>MongoDB :
<ul><li>Type : Base de données NoSQL orientée documents.</li> <li>Langage de requête : MongoDB Query Language (MQL).</li> <li>Support JSON : Support natif, stocke les documents en BSON.</li> <li>Support XML : Non supporté nativement.</li> <li>Indexation : B-tree, Geospatial, etc.</li> <li>Transactions : Supporte les transactions multi-documents.</li> <li>Scalabilité : Scalabilité horizontale.</li> <li>Extensions : Extensible via modules.</li> <li>Sécurité : SSL/TLS, authentification.</li> <li>Backup/Restauration : Oui (mongodump, mongoexport, etc.).</li> <li>Communauté : Large.</li></ul></li> <li>MariaDB :
<ul><li>Type : Base de données relationnelle.</li> <li>Langage de requête : SQL.</li> <li>Support JSON : Support partiel via les types JSON.</li> <li>Support XML : Support via XPath pour l’extraction des données XML.</li> <li>Indexation : B-tree, Full-text, etc.</li> <li>Transactions : Supporte les transactions ACID.</li> <li>Scalabilité : Scalabilité verticale.</li> <li>Extensions : Extensible via plugins.</li> <li>Sécurité : SSL/TLS, authentification.</li> <li>Backup/Restauration : Oui (mysqldump, MariaDB Backup, etc.).</li> <li>Communauté : Large.</li></ul></li>`;return{c(){n=p("h1"),n.textContent=B,m=c(),a=p("table"),a.innerHTML=T,g=c(),o=p("p"),o.innerHTML=f,M=c(),r=p("ul"),r.innerHTML=b,v=c(),s=p("p"),s.innerHTML=h,x=c(),u=p("ul"),u.innerHTML=y},l(t){n=d(t,"H1",{"data-svelte-h":!0}),S(n)!=="svelte-40sx9k"&&(n.textContent=B),m=L(t),a=d(t,"TABLE",{"data-svelte-h":!0}),S(a)!=="svelte-1b6ul3r"&&(a.innerHTML=T),g=L(t),o=d(t,"P",{"data-svelte-h":!0}),S(o)!=="svelte-di25rl"&&(o.innerHTML=f),M=L(t),r=d(t,"UL",{"data-svelte-h":!0}),S(r)!=="svelte-8g4nq8"&&(r.innerHTML=b),v=L(t),s=d(t,"P",{"data-svelte-h":!0}),S(s)!=="svelte-1qb5jsj"&&(s.innerHTML=h),x=L(t),u=d(t,"UL",{"data-svelte-h":!0}),S(u)!=="svelte-1ubpxit"&&(u.innerHTML=y)},m(t,e){i(t,n,e),i(t,m,e),i(t,a,e),i(t,g,e),i(t,o,e),i(t,M,e),i(t,r,e),i(t,v,e),i(t,s,e),i(t,x,e),i(t,u,e)},p:O,i:O,o:O,d(t){t&&(l(n),l(m),l(a),l(g),l(o),l(M),l(r),l(v),l(s),l(x),l(u))}}}const q={title:"SQL SGBD",date:"2024-06-28T00:00:00.000Z",author:"jmorvan",category:"database",keywords:"database ; sql ; nosql ; sgbd"};class k extends C{constructor(n){super(),D(this,n,null,X,Q,{})}}export{k as default,q as metadata};
