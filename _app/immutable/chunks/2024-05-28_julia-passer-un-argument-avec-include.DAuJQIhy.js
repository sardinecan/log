import{s as Y,n as P}from"./scheduler.DaEglZbh.js";import{S as $,i as ee,e as n,s as i,H as b,c as l,k as u,f as p,a as E,l as y,d as a,m as J,g as s}from"./index.B_-7WD2a.js";function te(N){let o,U="Julia : passer un argument avec include(‘file.jl’)",j,c,B="Une méthode intéressante consiste à utiliser <code>isdefined</code> pour vérifier la présence d’une source différente de paramètres avant d’utiliser <code>ARGS</code> dans le fichier que l’on souhaite inclue. Par exemple :",x,r,O="<code>main.jl</code>",w,f,C,V=`<code class="language-julia">newARGS <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token string">"adios"</span><span class="token punctuation">,</span><span class="token string">"amigos"</span><span class="token punctuation">]</span>
include<span class="token punctuation">(</span><span class="token string">"file.jl"</span><span class="token punctuation">)</span></code>`,S,d,K="<code>file.jl</code>",R,m,H,W=`<code class="language-julia">localARGS <span class="token operator">=</span> isdefined<span class="token punctuation">(</span><span class="token punctuation">:</span>newARGS<span class="token punctuation">)</span> <span class="token punctuation">?</span> newARGS <span class="token punctuation">:</span> ARGS
@show localARGS</code>`,T,k,Q="Ce qui donnerait :",A,v,L,X=`<code class="language-julia"><span class="token operator">></span> julia file<span class="token punctuation">.</span>jl hello world
localARGS <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token string">"world"</span><span class="token punctuation">]</span>

<span class="token operator">></span> julia main<span class="token punctuation">.</span>jl 
localARGS <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token string">"adios"</span><span class="token punctuation">,</span><span class="token string">"amigos"</span><span class="token punctuation">]</span></code>`,G,_,Z=`<p>Reassigning ARGS to make file.jl think it received arguments works, but leads to a warning (because it overwrites Base.ARGS). A better methods perhaps is to use isdefined to check for a different source of parameters before using ARGS in file.jl.
This also allows communicating deeper through several levels of inclusion.</p>`,M,g,z="Lectures",q,h,D='<li><a href="https://stackoverflow.com/questions/44967240/juliapassing-argument-to-the-includefile-jl" rel="nofollow"><em>Julia:passing argument to the include(“file.jl”)</em></a></li>';return{c(){o=n("h1"),o.textContent=U,j=i(),c=n("p"),c.innerHTML=B,x=i(),r=n("p"),r.innerHTML=O,w=i(),f=n("pre"),C=new b(!1),S=i(),d=n("p"),d.innerHTML=K,R=i(),m=n("pre"),H=new b(!1),T=i(),k=n("p"),k.textContent=Q,A=i(),v=n("pre"),L=new b(!1),G=i(),_=n("blockquote"),_.innerHTML=Z,M=i(),g=n("h2"),g.textContent=z,q=i(),h=n("ul"),h.innerHTML=D,this.h()},l(e){o=l(e,"H1",{"data-svelte-h":!0}),u(o)!=="svelte-1x8830c"&&(o.textContent=U),j=p(e),c=l(e,"P",{"data-svelte-h":!0}),u(c)!=="svelte-gx0swn"&&(c.innerHTML=B),x=p(e),r=l(e,"P",{"data-svelte-h":!0}),u(r)!=="svelte-98gsmq"&&(r.innerHTML=O),w=p(e),f=l(e,"PRE",{class:!0});var t=E(f);C=y(t,!1),t.forEach(a),S=p(e),d=l(e,"P",{"data-svelte-h":!0}),u(d)!=="svelte-15qmxl7"&&(d.innerHTML=K),R=p(e),m=l(e,"PRE",{class:!0});var F=E(m);H=y(F,!1),F.forEach(a),T=p(e),k=l(e,"P",{"data-svelte-h":!0}),u(k)!=="svelte-1vvslud"&&(k.textContent=Q),A=p(e),v=l(e,"PRE",{class:!0});var I=E(v);L=y(I,!1),I.forEach(a),G=p(e),_=l(e,"BLOCKQUOTE",{"data-svelte-h":!0}),u(_)!=="svelte-2su3lu"&&(_.innerHTML=Z),M=p(e),g=l(e,"H2",{"data-svelte-h":!0}),u(g)!=="svelte-1u3eosd"&&(g.textContent=z),q=p(e),h=l(e,"UL",{"data-svelte-h":!0}),u(h)!=="svelte-4cntxa"&&(h.innerHTML=D),this.h()},h(){C.a=null,J(f,"class","language-julia"),H.a=null,J(m,"class","language-julia"),L.a=null,J(v,"class","language-julia")},m(e,t){s(e,o,t),s(e,j,t),s(e,c,t),s(e,x,t),s(e,r,t),s(e,w,t),s(e,f,t),C.m(V,f),s(e,S,t),s(e,d,t),s(e,R,t),s(e,m,t),H.m(W,m),s(e,T,t),s(e,k,t),s(e,A,t),s(e,v,t),L.m(X,v),s(e,G,t),s(e,_,t),s(e,M,t),s(e,g,t),s(e,q,t),s(e,h,t)},p:P,i:P,o:P,d(e){e&&(a(o),a(j),a(c),a(x),a(r),a(w),a(f),a(S),a(d),a(R),a(m),a(T),a(k),a(A),a(v),a(G),a(_),a(M),a(g),a(q),a(h))}}}const ne={title:"Julia : passer un argument avec include('file.jl')",date:"2024-05-27T00:00:00.000Z",author:"jmorvan",category:"julia",keywords:"julia ; argument ; include ; variable"};class le extends ${constructor(o){super(),ee(this,o,null,te,Y,{})}}export{le as default,ne as metadata};
